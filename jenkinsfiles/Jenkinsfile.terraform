def stateChanged = false

pipeline {
  agent any

  tools {
    go 'Go 1.18.1'
    terraform 'Terraform'
  }

  stages {
    stage('Init') {
      steps {
        sh 'terraform -chdir=infra-terraform/dev init'
      }
    }

    stage('Lint') {
      steps {
        dir('infra-terraform/dev') {
          sh 'tflint'
        }
      }
    }

    stage('Plan') {
      steps {
        script {
          def planCmd = 'terraform -chdir=infra-terraform/dev plan -out planfile -detailed-exitcode'
          def statusCode = sh(script: planCmd, returnStatus: true)

          if (statusCode == 2) {
            stateChanged = true
          }
        }
      }
    }

    stage('Apply') {
      when {
        expression {
          stateChanged == true
        }
      }

      steps {
        sh 'terraform -chdir=infra-terraform/dev apply planfile'
      }
    }

    stage('Terratest') {
      steps {
        script {
          dir('terratest') {
            sh 'go test'
          }
        }
      }

      steps {
        sh 'terraform -chdir=infra-terraform/dev apply planfile'
      }
    }
  }
}
